const mongoose = require('mongoose');

const Schema = mongoose.Schema; /* из пакета mongoose вытягиваем пакет Schema */

/* присваиваем константе вызов конструктора */
const movieSchema = new Schema({
    title: {
        type: String,
        required: true, /* мы можем просто написать title: String, но так мы говорим о том, что это поле обязательно и если оно будет пропущено при каких-либо запросах - возникнет ошибка */
    },
    director: {
        type: String,
        required: true, 
    },
    year: {
        type: Number, /* монгусе имеет один тип для всех чисел и с запятой и целых */
        required: true, 
    },
   genres: [String], /* так как это массив, который содержит строковые значения */
   rating: Number,
   duration: {
    hours: Number,
    minutes: Number,
   },
   reviews: [{
    name: String,
    text: String
   }]

/* reviews и duration могут быть вынесены в отдельную схему и уже схемой присвоены сюда. */
}) 

/* теперь мы можем определить модель */
/* модель пишется с большой буквы, так как по сути является классом методы которого можно использовать или на его основе создавать новые экземпляры */
/* метод принимает два параметра имя модели и схему которую эта модель будет использовать */
const Movie = mongoose.model('Movie', movieSchema) 

/* имя модели нужно задавать определенным образом, так как потом mongoose будет автоматически искать в бд коллекцию название которой соответствует модели только во множественном числе - напомним, что наша коллекция в MongoDB называется movies поэтому присвоенное имя movie */

/* экспортиурем модель из файла */

module.exports = Movie;